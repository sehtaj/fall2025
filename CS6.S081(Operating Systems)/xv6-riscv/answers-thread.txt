Missing keys occur when two threads simultaneously try to insert keys into the same bucket. 
As both threads read the current head of the bucket, then they create a new entry, and then set next pointer to that head. 
So when both threads update the bucket pointer, one thread’s update overwrites the other’s, causing a key to be lost. 
With a single thread, no concurrency exists, so all keys are inserted correctly. 

Using a mutex per bucket prevents this race condition.

Sequence leading to a missing key:
	1.	Thread A reads table[i] (current head = X).
	2.	Thread B reads table[i] (current head = X).
	3.	Thread A creates new entry E1 and sets E1->next = X.
	4.	Thread B creates new entry E2 and sets E2->next = X.
	5.	Thread A updates table[i] = E1.
	6.	Thread B updates table[i] = E2, overwriting E1.

Result: Entry E1 is lost, causing a missing key.
